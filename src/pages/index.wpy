<template>
  <view id="index" class="{{ fontSize }}">
    <view class="main">
      <report wx:if="{{ activeTab === 0 }}"></report>
      <addrecord wx:if="{{ activeTab === 1 }}"></addrecord>
      <userinfowrapper wx:if="{{ activeTab === 2 }}"></userinfowrapper>
    </view>
    <view class="bottom-nav">
      <view class="nav-item data {{ activeTab === 0 ? 'active' : '' }}" @tap="switchTab" data-index="0">
        <view class="icon">
          <image src="../assets/icons/chart-line.svg"></image>
          <image src="../assets/icons/chart-line-active.svg"></image>
        </view>
        <view class="label">设备</view>
      </view>
      <view class="nav-item add" @tap="switchTab" data-index="1">
        <button class="add-fab">
          <image src="../assets/icons/add.svg"></image>
        </button>
      </view>
      <view class="nav-item userinfo {{ activeTab === 2 ? 'active' : '' }}" @tap="switchTab" data-index="2">
        <view class="icon">
          <image src="../assets/icons/userinfo.svg"></image>
          <image src="../assets/icons/userinfo-active.svg"></image>
        </view>
        <view class="label">
          <text>我的信息</text>
          <view class="badge" wx:if="{{ unconfirmedFriends > 0 }}"></view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import report from '../page-components/report'
  import TabMixin from '../mixins/tab'
  import { login } from '../lib/state'
  import addrecord from '../page-components/add-record'
  import FontSizeMixin from '../mixins/font-size'
  import userinfowrapper from '../page-components/userinfo-wrapper'

  import * as qs from 'qs'

  export default class Index extends wepy.page {
    components = {
      report,
      addrecord,
      userinfowrapper
    }

    mixins = [TabMixin, FontSizeMixin]

    data = {
      tabs: ['report', 'addrecord', 'userinfowrapper'].map(component => ({ component })),
      unconfirmedFriends: 0
    }

    events = {
      tabChanged (activeTab) {
        if (activeTab === 0) {
          wepy.showShareMenu()
        } else {
          wepy.hideShareMenu()
        }
      },
      switchToReport (reportIndex) {
        this.activeTab = 0
        this.$invoke('report', 'switchTab', reportIndex, true)
      }
    }

    async onLoad ({ uid }) {
      if (!await login()) {
        wepy.redirectTo({ url: './no-permission' })
        return
      }

      // 如果用户从好友转发中进入小程序, 先确认亲友关系, 确认后直接转到亲友的健康报告中
      if (this.$state.scene === 1007 && uid && this.$state.userinfo.uid !== uid) {
        await this.$loading('正在加载...')

        let showFriendsReport = false
        const friendInfo = (await this.$http.get(`userinfo/${uid}`)).data
        if (friendInfo.code) {
          this.$modal('错误', `无法读取用户数据: ${friendInfo.message} (${friendInfo.code})`)
        } else if (friendInfo.data.isFriend) {
          showFriendsReport = true
        } else if (await this.$modal('提示', `是否将${friendInfo.data.nickName}添加到你的亲友列表中？`, true)) {
          const result = (await this.$http.post('friend', { uid })).data
          if (result.code) {
            await this.$modal('错误', `无法添加亲友: ${result.message} (${result.code})`)
          } else if (!result.data) {
            await this.$modal('提示', '对方已收到您的亲友添加请求，待对方同意后即可互相查看健康报告')
          } else {
            showFriendsReport = true
          }
        }

        if (showFriendsReport) {
          const query = qs.stringify({
            q: JSON.stringify({
              uid: uid,
              ...friendInfo.data
            })
          })

          await this.$loading()
          return wepy.redirectTo({ url: './report?' + query })
        }

        await this.$loading()
      }

      this.$invoke('userinfowrapper/userinfo', 'refresh')
      this.$invoke('userinfowrapper/friends', 'refresh')

      if (this.$state.userinfo.height === null && this.$state.userinfo.birthday === null) {
        if (await this.$modal('提示', '您还没有填写生日与身高信息，是否现在去填写？', true)) {
          await this.$invoke('userinfowrapper/userinfo', 'editUserinfo', true)
        }
      }

      // 监听未确认朋友数量改变事件
      this.$globalEvents.on('unconfirmedFriendsChanged', count => {
        this.unconfirmedFriends = count
        this.$apply()
      })

      this.refreshActiveTab()
    }

    onShareAppMessage () {
      return {
        title: 'EasyFarming',
        path: 'pages/index?uid=' + this.$state.userinfo.uid
      }
    }
  }
</script>

<style lang="scss">
  @import '../assets/styles/variables';
  @import '../assets/styles/font-sizes';
  @include font-size-defs(index);

  .bottom-nav {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    display: flex;
    border-top: 1px solid $darker-white;
    box-shadow: $bottom-nav-shadow;

    .nav-item {
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: center;

      color: $gray;
      &.active { color: $primary; }

      .icon {
        flex: none;
        margin: 8px 0 4px;

        image {
          width: $icon-size;
          height: $icon-size;

          &:first-child {
            display: block;
          }

          &:last-child {
            display: none;
          }
        }
      }

      .label {
        position: relative;
        display: flex;
        align-items: center;

        .badge {
          $badge-size: 8px;

          position: absolute;
          right: -$badge-size / 2;
          top: -$badge-size / 2;
          width: $badge-size;
          height: $badge-size;
          border-radius: 50%;
          color: white;
          background-color: $primary;
        }
      }

      &.active .icon image {
        &:first-child {
          display: none;
        }

        &:last-child {
          display: block;
        }
      }
    }

    .nav-item.add {
      display: flex;
      align-items: center;
      justify-content: center;
      flex: none;
      overflow: visible;
    }

    .add-fab {
      @include button-reset;
      position: relative;
      top: -$add-fab-overflow-size / 2;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: $primary;
      border-radius: 50%;
      box-shadow: $shadow-2px;

      image {
        width: 50%;
        height: 50%;
      }

      &.button-hover {
        background-color: $primary-dark;
      }
    }
  }

  .main {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
  }
</style>
